{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/container.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js"],"names":["BlogPostTemplate","render","post","get","this","props","siteTitle","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","location","style","background","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","className","heroStyles","hero","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","heroImage","alt","fluid","grommet__WEBPACK_IMPORTED_MODULE_6__","display","publishDate","grommet__WEBPACK_IMPORTED_MODULE_7__","body","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","container","children","react_default","maxWidth","margin","navigation","role","styles","navigationItem","gatsby_browser_entry","to","Template","_this$props","__PREFIX_PATHS__"],"mappings":"gRAUMA,4FACJC,OAAA,WACE,IAAMC,EAAOC,IAAIC,KAAKC,MAAO,2BACvBC,EAAYH,IAAIC,KAAKC,MAAO,gCAElC,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUP,KAAKC,MAAMM,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAAEC,WAAY,SACxBN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAQO,MAAUb,EAAKa,MAAV,MAAqBT,IAClCC,EAAAC,EAAAC,cAAA,OAAKO,UAAWC,IAAWC,MACzBX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEQ,UAAWC,IAAWG,UACtBC,IAAKnB,EAAKa,MACVO,MAAOpB,EAAKkB,UAAUE,SAG1Bf,EAAAC,EAAAC,cAAA,OAAKO,UAAU,WACbT,EAAAC,EAAAC,cAACc,EAAA,EAAD,KAAUrB,EAAKa,OACfR,EAAAC,EAAAC,cAAA,KACEG,MAAO,CACLY,QAAS,UAGVtB,EAAKuB,aAGRlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KAAWxB,EAAKyB,KAAKA,aA1BFC,IAAMC,WAkCtB7B,YAER,IAAM8B,EAAS,+CC9CtB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,IAAAM,EAAAN,EAAAE,EAAAG,GAAAL,EAAAO,EAAAC,EAAA,sBAAAF,EAAA9B,IAAAwB,EAAA,KAa2BJ,IAAMa,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,0BCvEtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6FCKzCK,EAAmB,SAAAC,GAAiC,IAA9B1C,EAA8B0C,EAA9B1C,SAAU2C,EAAoBD,EAApBC,cACpC,OAAKA,EAGE1B,IAAMnB,cAAc8C,IAApBC,OAAAC,OAAA,CACL9C,WACA2C,iBACGA,EAAcI,OALV,MASXN,EAAiBO,UAAY,CAC3BhD,SAAU+B,IAAUkB,MAAM,CACxBC,SAAUnB,IAAUE,OAAOC,aAC1BA,YAGUO,2FCpBAU,UAAA,SAAAT,GAAA,IAAGU,EAAHV,EAAGU,SAAH,OACbC,EAAAxD,EAAAC,cAAA,OAAKG,MAAO,CAAEqD,SAAU,KAAMC,OAAQ,WAAaH,uBCCtCI,EAAA,kBACbH,EAAAxD,EAAAC,cAAA,OAAK2D,KAAK,cACRJ,EAAAxD,EAAAC,cAAA,MAAIO,UAAWqD,IAAOF,YACpBH,EAAAxD,EAAAC,cAAA,MAAIO,UAAWqD,IAAOC,gBACpBN,EAAAxD,EAAAC,cAAC8D,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEFR,EAAAxD,EAAAC,cAAA,MAAIO,UAAWqD,IAAOC,gBACpBN,EAAAxD,EAAAC,cAAC8D,EAAA,EAAD,CAAMC,GAAG,UAAT,YCLFC,4FACJxE,OAAA,WAAS,IAAAyE,EACwBtE,KAAKC,MAAlB0D,GADXW,EACC/D,SADD+D,EACWX,UAQlB,MAJI,oBAAOY,kBAAoCA,kBACnB,IAI1BX,EAAAxD,EAAAC,cAACqD,EAAD,KACEE,EAAAxD,EAAAC,cAAC0D,EAAD,MACCJ,OAbcnC,IAAMC,WAmBd4C","file":"component---src-templates-blog-post-js-ef57b4665216de0738d5.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport Img from 'gatsby-image'\nimport Layout from '../components/layout'\nimport { Heading, Markdown } from 'grommet'\n\nimport heroStyles from '../components/hero.module.css'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = get(this.props, 'data.contentfulBlogPost')\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n\n    return (\n      <Layout location={this.props.location}>\n        <div style={{ background: '#fff' }}>\n          <Helmet title={`${post.title} | ${siteTitle}`} />\n          <div className={heroStyles.hero}>\n            <Img\n              className={heroStyles.heroImage}\n              alt={post.title}\n              fluid={post.heroImage.fluid}\n            />\n          </div>\n          <div className=\"wrapper\">\n            <Heading>{post.title}</Heading>\n            <p\n              style={{\n                display: 'block',\n              }}\n            >\n              {post.publishDate}\n            </p>\n\n            <Markdown>{post.body.body}</Markdown>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    contentfulBlogPost(slug: { eq: $slug }) {\n      title\n      publishDate(formatString: \"MMMM Do, YYYY\")\n      heroImage {\n        fluid(maxWidth: 1180, background: \"rgb:000000\") {\n          ...GatsbyContentfulFluid_tracedSVG\n        }\n      }\n      body {\n        body\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nexport default ({ children }) => (\n  <div style={{ maxWidth: 1180, margin: '0 auto' }}>{children}</div>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from './navigation.module.css'\n\nexport default () => (\n  <nav role=\"navigation\">\n    <ul className={styles.navigation}>\n      <li className={styles.navigationItem}>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li className={styles.navigationItem}>\n        <Link to=\"/blog/\">Blog</Link>\n      </li>\n    </ul>\n  </nav>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport base from './base.css'\nimport Container from './container'\nimport Navigation from './navigation'\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    let header\n\n    let rootPath = `/`\n    if (typeof __PREFIX_PATHS__ !== `undefined` && __PREFIX_PATHS__) {\n      rootPath = __PATH_PREFIX__ + `/`\n    }\n\n    return (\n      <Container>\n        <Navigation />\n        {children}\n      </Container>\n    )\n  }\n}\n\nexport default Template\n"],"sourceRoot":""}